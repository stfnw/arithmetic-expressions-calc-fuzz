$ ./target
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 346471827
INFO: Loaded 1 modules   (190 inline 8-bit counters): 190 [0x60cc8bdabc70, 0x60cc8bdabd2e),
INFO: Loaded 1 PC tables (190 PCs): 190 [0x60cc8bdabd30,0x60cc8bdac910),
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2      INITED exec/s: 0 rss: 35Mb
WARNING: no interesting inputs were found so far. Is the code instrumented for coverage?
This may also happen if the target rejected all inputs we tried so far
=================================================================
==2119308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x502000000431 at pc 0x60cc8bd59d8c bp 0x7ffe2202ce10 sp 0x7ffe2202ce08
READ of size 1 at 0x502000000431 thread T0
    #0 0x60cc8bd59d8b in lex /tmp/arithmetic-expressions-calc-fuzz/libfuzzer/../arithmetic-expressions-calc/lib.c:308:29
    #1 0x60cc8bd59d8b in LLVMFuzzerTestOneInput /tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target.c:20:24
    #2 0x60cc8bbfe123 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x64123) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #3 0x60cc8bbfedd0 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x64dd0) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #4 0x60cc8bbffe48 in fuzzer::Fuzzer::MutateAndTestOne() (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x65e48) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #5 0x60cc8bc01137 in fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x67137) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #6 0x60cc8bbe3264 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x49264) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #7 0x60cc8bbcca97 in main (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x32a97) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #8 0x72a259c34e07 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #9 0x72a259c34ecb in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3
    #10 0x60cc8bbccad4 in _start (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x32ad4) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)

0x502000000431 is located 0 bytes after 1-byte region [0x502000000430,0x502000000431)
allocated by thread T0 here:
    #0 0x60cc8bd0eb19 in malloc (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x174b19) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #1 0x72a259eae744 in operator new(unsigned long) /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/new_op.cc:50:22
    #2 0x60cc8bbfe029 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x64029) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #3 0x60cc8bbfedd0 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x64dd0) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #4 0x60cc8bbffe48 in fuzzer::Fuzzer::MutateAndTestOne() (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x65e48) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #5 0x60cc8bc01137 in fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x67137) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #6 0x60cc8bbe3264 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x49264) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #7 0x60cc8bbcca97 in main (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x32a97) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)
    #8 0x72a259c34e07 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #9 0x72a259c34ecb in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3
    #10 0x60cc8bbccad4 in _start (/tmp/arithmetic-expressions-calc-fuzz/libfuzzer/target+0x32ad4) (BuildId: 08a9cb48eea0d55bd6b564eaea8e77441e4bed51)

SUMMARY: AddressSanitizer: heap-buffer-overflow /tmp/arithmetic-expressions-calc-fuzz/libfuzzer/../arithmetic-expressions-calc/lib.c:308:29 in lex
Shadow bytes around the buggy address:
  0x502000000180: fa fa fd fd fa fa fd fa fa fa fd fa fa fa 04 fa
  0x502000000200: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x502000000280: fa fa 00 fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x502000000300: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x502000000380: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
=>0x502000000400: fa fa fd fa fa fa[01]fa fa fa fa fa fa fa fa fa
  0x502000000480: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000500: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000580: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x502000000680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2119308==ABORTING
MS: 4 ChangeByte-ShuffleBytes-ShuffleBytes-ChangeByte-; base unit: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
0x38,
8
artifact_prefix='./'; Test unit written to ./crash-fe5dbbcea5ce7e2988b8c69bcfdfde8904aabc1f
Base64: OA==
